//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\Projects\YarnSpinner\YarnSpinner.Compiler\YarnSpinnerParser.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Yarn.Compiler {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="YarnSpinnerParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface IYarnSpinnerParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.dialogue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDialogue([NotNull] YarnSpinnerParser.DialogueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.file_hashtag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFile_hashtag([NotNull] YarnSpinnerParser.File_hashtagContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.node"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNode([NotNull] YarnSpinnerParser.NodeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHeader([NotNull] YarnSpinnerParser.HeaderContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBody([NotNull] YarnSpinnerParser.BodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] YarnSpinnerParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.line_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLine_statement([NotNull] YarnSpinnerParser.Line_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.line_formatted_text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLine_formatted_text([NotNull] YarnSpinnerParser.Line_formatted_textContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.line_substitution_alignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLine_substitution_alignment([NotNull] YarnSpinnerParser.Line_substitution_alignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.line_substitution_formatter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLine_substitution_formatter([NotNull] YarnSpinnerParser.Line_substitution_formatterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.hashtag"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHashtag([NotNull] YarnSpinnerParser.HashtagContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.line_condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLine_condition([NotNull] YarnSpinnerParser.Line_conditionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expParens</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpParens([NotNull] YarnSpinnerParser.ExpParensContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expMultDivMod</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpMultDivMod([NotNull] YarnSpinnerParser.ExpMultDivModContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expComparison</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpComparison([NotNull] YarnSpinnerParser.ExpComparisonContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expNegative</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpNegative([NotNull] YarnSpinnerParser.ExpNegativeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expAndOrXor</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpAndOrXor([NotNull] YarnSpinnerParser.ExpAndOrXorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expAddSub</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpAddSub([NotNull] YarnSpinnerParser.ExpAddSubContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expNot</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpNot([NotNull] YarnSpinnerParser.ExpNotContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expValue</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpValue([NotNull] YarnSpinnerParser.ExpValueContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expEquality</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpEquality([NotNull] YarnSpinnerParser.ExpEqualityContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>valueNumber</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValueNumber([NotNull] YarnSpinnerParser.ValueNumberContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>valueTrue</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValueTrue([NotNull] YarnSpinnerParser.ValueTrueContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>valueFalse</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValueFalse([NotNull] YarnSpinnerParser.ValueFalseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>valueVar</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValueVar([NotNull] YarnSpinnerParser.ValueVarContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>valueString</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValueString([NotNull] YarnSpinnerParser.ValueStringContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>valueNull</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValueNull([NotNull] YarnSpinnerParser.ValueNullContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>valueFunc</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValueFunc([NotNull] YarnSpinnerParser.ValueFuncContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable([NotNull] YarnSpinnerParser.VariableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.function_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction_call([NotNull] YarnSpinnerParser.Function_callContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf_statement([NotNull] YarnSpinnerParser.If_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.if_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf_clause([NotNull] YarnSpinnerParser.If_clauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.else_if_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElse_if_clause([NotNull] YarnSpinnerParser.Else_if_clauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.else_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElse_clause([NotNull] YarnSpinnerParser.Else_clauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.set_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSet_statement([NotNull] YarnSpinnerParser.Set_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.call_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCall_statement([NotNull] YarnSpinnerParser.Call_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.command_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommand_statement([NotNull] YarnSpinnerParser.Command_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.command_formatted_text"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommand_formatted_text([NotNull] YarnSpinnerParser.Command_formatted_textContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.shortcut_option_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShortcut_option_statement([NotNull] YarnSpinnerParser.Shortcut_option_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.shortcut_option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShortcut_option([NotNull] YarnSpinnerParser.Shortcut_optionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="YarnSpinnerParser.declare_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclare_statement([NotNull] YarnSpinnerParser.Declare_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>jumpToNodeName</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.jump_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitJumpToNodeName([NotNull] YarnSpinnerParser.JumpToNodeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>jumpToExpression</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.jump_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitJumpToExpression([NotNull] YarnSpinnerParser.JumpToExpressionContext context);
}
} // namespace Yarn.Compiler

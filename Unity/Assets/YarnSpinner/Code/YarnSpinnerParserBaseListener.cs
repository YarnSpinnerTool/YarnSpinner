//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from YarnSpinnerParser.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IYarnSpinnerParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public partial class YarnSpinnerParserBaseListener : IYarnSpinnerParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.dialogue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDialogue([NotNull] YarnSpinnerParser.DialogueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.dialogue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDialogue([NotNull] YarnSpinnerParser.DialogueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.node"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNode([NotNull] YarnSpinnerParser.NodeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.node"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNode([NotNull] YarnSpinnerParser.NodeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.header"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHeader([NotNull] YarnSpinnerParser.HeaderContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.header"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHeader([NotNull] YarnSpinnerParser.HeaderContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.header_title"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHeader_title([NotNull] YarnSpinnerParser.Header_titleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.header_title"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHeader_title([NotNull] YarnSpinnerParser.Header_titleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.header_tag"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHeader_tag([NotNull] YarnSpinnerParser.Header_tagContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.header_tag"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHeader_tag([NotNull] YarnSpinnerParser.Header_tagContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.header_line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHeader_line([NotNull] YarnSpinnerParser.Header_lineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.header_line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHeader_line([NotNull] YarnSpinnerParser.Header_lineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBody([NotNull] YarnSpinnerParser.BodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBody([NotNull] YarnSpinnerParser.BodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] YarnSpinnerParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] YarnSpinnerParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.shortcut_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShortcut_statement([NotNull] YarnSpinnerParser.Shortcut_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.shortcut_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShortcut_statement([NotNull] YarnSpinnerParser.Shortcut_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.shortcut"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShortcut([NotNull] YarnSpinnerParser.ShortcutContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.shortcut"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShortcut([NotNull] YarnSpinnerParser.ShortcutContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.shortcut_conditional"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShortcut_conditional([NotNull] YarnSpinnerParser.Shortcut_conditionalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.shortcut_conditional"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShortcut_conditional([NotNull] YarnSpinnerParser.Shortcut_conditionalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.shortcut_text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShortcut_text([NotNull] YarnSpinnerParser.Shortcut_textContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.shortcut_text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShortcut_text([NotNull] YarnSpinnerParser.Shortcut_textContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_statement([NotNull] YarnSpinnerParser.If_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_statement([NotNull] YarnSpinnerParser.If_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.if_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_clause([NotNull] YarnSpinnerParser.If_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.if_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_clause([NotNull] YarnSpinnerParser.If_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.else_if_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElse_if_clause([NotNull] YarnSpinnerParser.Else_if_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.else_if_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElse_if_clause([NotNull] YarnSpinnerParser.Else_if_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.else_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElse_clause([NotNull] YarnSpinnerParser.Else_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.else_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElse_clause([NotNull] YarnSpinnerParser.Else_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.set_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSet_statement([NotNull] YarnSpinnerParser.Set_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.set_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSet_statement([NotNull] YarnSpinnerParser.Set_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.option_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOption_statement([NotNull] YarnSpinnerParser.Option_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.option_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOption_statement([NotNull] YarnSpinnerParser.Option_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction([NotNull] YarnSpinnerParser.FunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction([NotNull] YarnSpinnerParser.FunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.function_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_statement([NotNull] YarnSpinnerParser.Function_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.function_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_statement([NotNull] YarnSpinnerParser.Function_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.action_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAction_statement([NotNull] YarnSpinnerParser.Action_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.action_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAction_statement([NotNull] YarnSpinnerParser.Action_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterText([NotNull] YarnSpinnerParser.TextContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.text"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitText([NotNull] YarnSpinnerParser.TextContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.line_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLine_statement([NotNull] YarnSpinnerParser.Line_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.line_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLine_statement([NotNull] YarnSpinnerParser.Line_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.hashtag_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHashtag_block([NotNull] YarnSpinnerParser.Hashtag_blockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.hashtag_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHashtag_block([NotNull] YarnSpinnerParser.Hashtag_blockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.hashtag"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHashtag([NotNull] YarnSpinnerParser.HashtagContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.hashtag"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHashtag([NotNull] YarnSpinnerParser.HashtagContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expParens</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpParens([NotNull] YarnSpinnerParser.ExpParensContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expParens</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpParens([NotNull] YarnSpinnerParser.ExpParensContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expMultDivMod</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpMultDivMod([NotNull] YarnSpinnerParser.ExpMultDivModContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expMultDivMod</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpMultDivMod([NotNull] YarnSpinnerParser.ExpMultDivModContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expMultDivModEquals</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpMultDivModEquals([NotNull] YarnSpinnerParser.ExpMultDivModEqualsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expMultDivModEquals</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpMultDivModEquals([NotNull] YarnSpinnerParser.ExpMultDivModEqualsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expComparison</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpComparison([NotNull] YarnSpinnerParser.ExpComparisonContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expComparison</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpComparison([NotNull] YarnSpinnerParser.ExpComparisonContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expNegative</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpNegative([NotNull] YarnSpinnerParser.ExpNegativeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expNegative</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpNegative([NotNull] YarnSpinnerParser.ExpNegativeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expAndOrXor</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpAndOrXor([NotNull] YarnSpinnerParser.ExpAndOrXorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expAndOrXor</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpAndOrXor([NotNull] YarnSpinnerParser.ExpAndOrXorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expPlusMinusEquals</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpPlusMinusEquals([NotNull] YarnSpinnerParser.ExpPlusMinusEqualsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expPlusMinusEquals</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpPlusMinusEquals([NotNull] YarnSpinnerParser.ExpPlusMinusEqualsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expAddSub</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpAddSub([NotNull] YarnSpinnerParser.ExpAddSubContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expAddSub</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpAddSub([NotNull] YarnSpinnerParser.ExpAddSubContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expNot</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpNot([NotNull] YarnSpinnerParser.ExpNotContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expNot</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpNot([NotNull] YarnSpinnerParser.ExpNotContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expValue</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpValue([NotNull] YarnSpinnerParser.ExpValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expValue</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpValue([NotNull] YarnSpinnerParser.ExpValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expEquality</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpEquality([NotNull] YarnSpinnerParser.ExpEqualityContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expEquality</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpEquality([NotNull] YarnSpinnerParser.ExpEqualityContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>valueNumber</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueNumber([NotNull] YarnSpinnerParser.ValueNumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>valueNumber</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueNumber([NotNull] YarnSpinnerParser.ValueNumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>valueTrue</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueTrue([NotNull] YarnSpinnerParser.ValueTrueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>valueTrue</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueTrue([NotNull] YarnSpinnerParser.ValueTrueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>valueFalse</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueFalse([NotNull] YarnSpinnerParser.ValueFalseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>valueFalse</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueFalse([NotNull] YarnSpinnerParser.ValueFalseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>valueVar</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueVar([NotNull] YarnSpinnerParser.ValueVarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>valueVar</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueVar([NotNull] YarnSpinnerParser.ValueVarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>valueString</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueString([NotNull] YarnSpinnerParser.ValueStringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>valueString</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueString([NotNull] YarnSpinnerParser.ValueStringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>valueFunc</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueFunc([NotNull] YarnSpinnerParser.ValueFuncContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>valueFunc</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueFunc([NotNull] YarnSpinnerParser.ValueFuncContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>valueNull</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueNull([NotNull] YarnSpinnerParser.ValueNullContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>valueNull</c>
	/// labeled alternative in <see cref="YarnSpinnerParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueNull([NotNull] YarnSpinnerParser.ValueNullContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="YarnSpinnerParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable([NotNull] YarnSpinnerParser.VariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="YarnSpinnerParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable([NotNull] YarnSpinnerParser.VariableContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
